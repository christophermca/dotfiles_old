#! /usr/bin/bash

alias .workrc='vim $HOME/.workrc'

_r0_comp() {
   local cur prev opts

   COMPREPLY=()

   cur="${COMP_WORDS[COMP_CWORD]}"
   prev="${COMP_WORDS[COMP_CWORD - 1]}"
   opts=$(ls -d $HOME/Repos/*.d)

   COMPREPLY=($(compgen -W "${opts}" -- "${cur}"))

   return 0
}

complete -F _r0_comp r0

r0() {
  # When r0 is called without parameters. It will list all available
  # `grouped_directories` eg (folders with postfix `somefoldername.d`)
  if [ $# -lt 1 ]; then
    cd $HOME/Repos
    echo -e "List of available 'Group-directories':\n"
    ls -d ./*.d
    read -p 'Which project do you want to view: ' GROUP_DIRECTORY
    if [ $GROUP_DIRECTORY ]; then
      if [ -d $HOME/Repos/$GROUP_DIRECTORY ]; then
        cd $GROUP_DIRECTORY
      else
        cd "${GROUP_DIRECTORY}.d"
      fi
    fi
  else
    # When r0 is called with a parameters. navigate to that location
    cd $1
  fi
}

alias ffx="/Applications/Firefox.app/Contents/MacOS/firefox-bin"

# docker
alias kubectl="minikube kubectl --"

function useDockerKube {
  eval "$(minikube docker-env)"
}

# NR admin
VAULT_OPS_STRING=":h"
vault_login() {
  local me=$(whoami)
  while getopts ${VAULT_OPS_STRING} opt; do
    case ${opt} in
      h)
        echo "Usage: vault-login <totp>"
        return 0
        ;;
      *)
        echo 'in :'
        echo "$1"

    esac
  done

  if [ $# -gt 0 ]; then
    TOTP=$1;
    newrelic-vault us login -method=okta username=$me totp=$TOTP
  else
    read -p 'Provide totp: ' TOTP
    if [ -z $TOTP ]; then
      echo "please provide a totp"
      return 0
    fi
    newrelic-vault us login -method=okta username=$me totp=$TOTP
  fi


}

killPort() {
    if (( $# == 1 )); then
      local PORT=$1
      local readonly USEDPORT=$(lsof -i :$PORT);

        if [[ -n $USEDPORT ]];
        then
          $(ps -eo pid,command | ag [n]ode | awk "{print $2}" | xargs kill -9 > /dev/null 2>&1 &)
          echo -e "${COL_GREEN} Done!";
        else
          echo -e "${COL_BLUE} Port ${PORT} not in use";
        fi
    else
      echo "${COL_BLUE}Usage: killPort <pid>${NORMAL}"
    fi
  }
